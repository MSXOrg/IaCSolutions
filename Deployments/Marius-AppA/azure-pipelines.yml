name: $(TeamProject)_$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger:
 branches:
  include:
    - '*'

variables:
  Location: 'West Europe'
  serviceConnection: 'S001-DemoSub'
  TemplateFile: 'Solutions\AppA\main.bicep'
  TemplateParameterFile: 'Deployments\Marius-AppA\parameters.json'

pool:
  vmImage: ubuntu-latest

stages:
- stage: Checkcode
  displayName: Check code
  jobs:
  - job: LintCode
    displayName: Lint code
    steps:
      - task: AzurePowerShell@5
        name: LintBicepCode
        displayName: Run Bicep linter
        inputs:
          azureSubscription: $(serviceConnection)
          ScriptType: 'InlineScript'
          azurePowerShellVersion: 'LatestVersion'
          pwsh: true
          Inline: |
            az bicep build --file '$(TemplateFile)'
  - job: ValidateDeployment
    displayName: Validate Deployment
    steps:
      - task: AzurePowerShell@5
        inputs:
          azureSubscription: $(serviceConnection)
          ScriptType: 'InlineScript'
          azurePowerShellVersion: 'LatestVersion'
          pwsh: true
          Inline: |

            $DeploymentInputs = @{
                Name                  = "Sub-$(-join (Get-Date -Format yyyyMMddTHHMMssffffZ)[0..63])"
                Location              = '$(Location)'
                TemplateFile          = '$(TemplateFile)'
                TemplateParameterFile = '$(TemplateParameterFile)'
                Verbose               = $true
                ErrorAction           = 'Stop'
            }

            Write-Output 'SubscriptionDeployment using:'
            $DeploymentInputs

            Test-AzSubscriptionDeployment @DeploymentInputs
  - job: WhatIfDeployment
    displayName: WhatIf Deployment
    steps:
      - task: AzurePowerShell@5
        inputs:
          azureSubscription: $(serviceConnection)
          ScriptType: 'InlineScript'
          azurePowerShellVersion: 'LatestVersion'
          pwsh: true
          Inline: |

            $DeploymentInputs = @{
                Name                  = "Sub-$(-join (Get-Date -Format yyyyMMddTHHMMssffffZ)[0..63])"
                Location              = '$(Location)'
                TemplateFile          = '$(TemplateFile)'
                TemplateParameterFile = '$(TemplateParameterFile)'
                Verbose               = $true
                WhatIf                = $true
                ErrorAction           = 'Stop'
            }

            Write-Output 'SubscriptionDeployment using:'
            $DeploymentInputs

            New-AzSubscriptionDeployment @DeploymentInputs

- stage: DeployDev
  displayName: Deploy to [dev]
  jobs:
  - job: DeployInfraDev
    displayName: Deploy infra to [dev]
    steps:
    - task: AzurePowerShell@5
      inputs:
        azureSubscription: $(serviceConnection)
        ScriptType: 'InlineScript'
        azurePowerShellVersion: 'LatestVersion'
        pwsh: true
        Inline: |

          $DeploymentInputs = @{
              Name                  = "Sub-$(-join (Get-Date -Format yyyyMMddTHHMMssffffZ)[0..63])"
              Location              = '$(Location)'
              TemplateFile          = '$(TemplateFile)'
              #TemplateParameterFile = '$(TemplateParameterFile)'
              Verbose               = $true
              ErrorAction           = 'Stop'
              env                   = 'dev'
          }

          Write-Output 'SubscriptionDeployment using:'
          $DeploymentInputs

          New-AzSubscriptionDeployment @DeploymentInputs

- stage: DeployTest
  displayName: Deploy to [test]
  jobs:
  - job: DeployInfraTest
    displayName: Deploy infra to [test]
    steps:
    - task: AzurePowerShell@5
      inputs:
        azureSubscription: $(serviceConnection)
        ScriptType: 'InlineScript'
        azurePowerShellVersion: 'LatestVersion'
        pwsh: true
        Inline: |

          $DeploymentInputs = @{
              Name                  = "Sub-$(-join (Get-Date -Format yyyyMMddTHHMMssffffZ)[0..63])"
              Location              = '$(Location)'
              TemplateFile          = '$(TemplateFile)'
              #TemplateParameterFile = '$(TemplateParameterFile)'
              Verbose               = $true
              ErrorAction           = 'Stop'
              env                   = 'test'
          }

          Write-Output 'SubscriptionDeployment using:'
          $DeploymentInputs

          New-AzSubscriptionDeployment @DeploymentInputs

- stage: DeployProd
  displayName: Deploy to [prod]
  jobs:
  - job: DeployInfraProd
    displayName: Deploy infra to [prod]
    steps:
    - task: AzurePowerShell@5
      inputs:
        azureSubscription: $(serviceConnection)
        ScriptType: 'InlineScript'
        azurePowerShellVersion: 'LatestVersion'
        pwsh: true
        Inline: |

          $DeploymentInputs = @{
              Name                  = "Sub-$(-join (Get-Date -Format yyyyMMddTHHMMssffffZ)[0..63])"
              Location              = '$(Location)'
              TemplateFile          = '$(TemplateFile)'
              #TemplateParameterFile = '$(TemplateParameterFile)'
              Verbose               = $true
              ErrorAction           = 'Stop'
              env                   = 'prod'
          }

          Write-Output 'SubscriptionDeployment using:'
          $DeploymentInputs

          New-AzSubscriptionDeployment @DeploymentInputs
